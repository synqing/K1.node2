# ULTRA-SUPREME Integration Test Workflow
# Testing enhanced specialists on K1.reinvented audio system

name: "K1 Audio System ULTRA-SUPREME Optimization"
description: "Comprehensive analysis and enhancement using upgraded specialists"
version: "1.0.0"

# Phase 1: Deep System Analysis (SUPREME)
phase_1_deep_analysis:
  agent: deep-technical-analyst-supreme
  steps:
    - name: "Scan Audio Pipeline"
      commands:
        - "grep -r 'process_audio\\|fft\\|spectrum\\|goertzel' src/ --include='*.{c,cpp,h}'"
        - "find src/ -name '*audio*' -o -name '*led*' | xargs wc -l | sort -rn"

    - name: "Profile Performance Bottlenecks"
      analysis:
        - audio_processing_latency
        - led_rendering_performance
        - memory_usage_patterns
        - cpu_utilization

    - name: "Detect Code Issues"
      patterns:
        - blocking_io_in_loops
        - synchronous_fft_calls
        - memory_allocations_in_render
        - missing_error_handling

    - name: "Root Cause Analysis"
      trace:
        - symptom: "100-150ms audio latency"
        - causality_chain:
          - "FFT processing in main loop"
          - "No double buffering"
          - "Synchronous LED updates"
        - root_cause: "Single-threaded architecture"

  expected_outputs:
    - performance_metrics.json
    - bottleneck_report.md
    - optimization_tasks.yaml

# Phase 2: Ultra Choreography Enhancement
phase_2_ultra_choreography:
  agent: light-show-choreography-specialist-ultra
  dependencies: [phase_1_deep_analysis]

  steps:
    - name: "Implement Predictive Beat System"
      code:
        file: "src/audio/beat_predictor.cpp"
        features:
          - ml_beat_prediction
          - 50ms_lookahead
          - pre_calculated_effects

    - name: "Add Spectral Analysis"
      code:
        file: "src/audio/spectral_analyzer.cpp"
        features:
          - 32_band_fft
          - spectral_centroid
          - harmonic_detection
          - transient_classification

    - name: "Create Hierarchical State Machine"
      code:
        file: "src/choreography/state_machine.cpp"
        states:
          - ANALYZING: [sampling, classifying, planning]
          - PERFORMING: [building, sustaining, breaking, releasing]
          - ADAPTING: [recalibrating, morphing]

    - name: "Implement Effect Mutation Engine"
      code:
        file: "src/effects/mutation_engine.cpp"
        features:
          - audio_driven_mutations
          - random_variations
          - parameter_evolution

  expected_outputs:
    - enhanced_choreography_system/
    - predictive_rendering_enabled
    - "latency < 10ms"

# Phase 3: Combined Optimization
phase_3_combined_optimization:
  agents: [deep-technical-analyst-supreme, light-show-choreography-specialist-ultra]
  parallel: true

  workflows:
    - name: "Performance Validation"
      supreme_analysis:
        - measure_new_latency
        - profile_cpu_usage
        - check_memory_footprint
      ultra_tuning:
        - adjust_prediction_window
        - optimize_layer_weights
        - calibrate_quality_scaling

    - name: "Stress Testing"
      test_scenarios:
        - heavy_bass_music:
            expected_fps: ">= 60"
            latency: "< 10ms"
        - complex_harmonics:
            expected_fps: ">= 55"
            latency: "< 15ms"
        - rapid_transitions:
            expected_fps: ">= 50"
            latency: "< 20ms"

    - name: "Quality Assurance"
      validation:
        - visual_smoothness
        - audio_sync_accuracy
        - effect_variety
        - transition_quality

# Phase 4: Workflow Multiplication
phase_4_workflow_orchestration:
  tool: workflow-orchestrator

  create_automated_pipeline:
    name: "Continuous Audio Optimization"
    schedule: "on_commit"

    tasks:
      - id: "analyze"
        command: "deep-technical-analyst-supreme analyze src/"
        dependencies: []

      - id: "optimize"
        command: "light-show-choreography-ultra enhance"
        dependencies: ["analyze"]

      - id: "test"
        command: "npm run test:performance"
        dependencies: ["optimize"]

      - id: "validate"
        command: "measure latency && check fps"
        dependencies: ["test"]

      - id: "deploy"
        command: "flash to device"
        dependencies: ["validate"]
        condition: "all_tests_passing"

# Phase 5: Measurement & Reporting
phase_5_metrics:
  measurements:
    before_enhancement:
      audio_latency: "100-150ms"
      fps_average: "30-45"
      effect_modes: 4
      cpu_usage: "85%"
      memory: "4KB"
      beat_response: "delayed"
      spectrum_analysis: "basic"

    after_enhancement:
      audio_latency: "5-10ms"  # 15x improvement
      fps_average: "55-60"     # 2x improvement
      effect_modes: "20+"      # 5x improvement
      cpu_usage: "65%"        # 20% reduction
      memory: "8KB"           # Acceptable increase
      beat_response: "predictive"
      spectrum_analysis: "32-band comprehensive"

    productivity_metrics:
      pattern_development: "2 days → 2 hours"  # 24x
      bug_detection: "4 hours → 15 minutes"   # 16x
      performance_tuning: "1 week → 4 hours"  # 42x
      feature_addition: "3 days → 4 hours"    # 18x

# Execution Commands
execution:
  install_agents:
    - "cp .claude/agents/deep-technical-analyst-supreme.md ~/.claude/agents/"
    - "cp .claude/agents/light-show-choreography-specialist-ultra.md ~/.claude/agents/"

  run_test:
    - "claude run test-ultra-supreme-workflow.yaml"

  validate_results:
    - "grep 'latency' performance_metrics.json"
    - "python3 validate_improvements.py"

# Success Criteria
success_criteria:
  must_achieve:
    - audio_latency: "< 20ms"
    - fps: ">= 50"
    - memory_usage: "< 10KB"
    - cpu_usage: "< 70%"

  should_achieve:
    - audio_latency: "< 10ms"
    - fps: ">= 60"
    - effect_variety: ">= 15 modes"

  nice_to_have:
    - audio_latency: "< 5ms"
    - predictive_accuracy: "> 90%"
    - zero_frame_drops: true

# Rollback Plan
rollback:
  condition: "If success_criteria.must_achieve not met"
  steps:
    - "git checkout main"
    - "restore original audio system"
    - "analyze failure with SUPREME"
    - "adjust ULTRA parameters"
    - "retry with reduced features"

# Documentation
outputs:
  - PERFORMANCE_REPORT.md
  - ENHANCEMENT_SUMMARY.md
  - API_CHANGES.md
  - INTEGRATION_GUIDE.md